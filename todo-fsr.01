#!/usr/bin/env bash


tasklist=tasklist
pager=/usr/bin/less
editor=/usr/bin/nano

# format for tasklist
# tag : due-date : text : entry date

# options
# -a add/append
# -r <tag>  recall 


# todo -a
function append_entry {
    tag=
    duedate=
    text=
    echo "Tag: "
    read tag
    echo "Date task is due: "
    read duedate
    echo "Message: "
    read text
    echo "$tag : $duedate : $text : Entered on $(date +%Y-%m-%d)" >> "$tasklist"
exit 0
}
# Thoughts:  Possible to use free-form due date, add field for date of entry, calculate due date
# from words like tomorrow, next week, Tuesday, etc.?

# todo -r <tag>
function recall_tags {
    IFS=":"
    while read line
    do
        if  [[ "${line:0:1}" = "$tag" ]]     ##### This works - $tag is defined in the loop for command options 
        then
            echo "$line"
        fi      
    done < "tasklist"
exit 0
}

# todo -d
function recall_due {
	duedate=
	echo "Show tasks due on: "
	read duedate
    IFS=":"
    while read line
    do
        if  [[ "${line:4:10}" = "$duedate" ]]
        then
            echo "$line"
        fi      
done < "tasklist"
exit 0
}	

# todo -k
function recall_keyword {
	key=
	echo "Search for keyword: "
	read key
	while read line
	do
	    grep "$key"
	done < "tasklist"
exit 0
}


while [[ $1 == -* ]]; do
    case "$1" in
      -a) append_entry ;;
      -d) recall_due ;;
      -k) recall_keyword ;;
      -r) echo tag=$2 ; recall_tags   ;;
      -l) "$pager" "$tasklist" ; exit 0 ;;
      -e) "$editor" "$tasklist" ; exit 0 ;;
    esac
done
