TODO list for todo.sh


#TODO: 

@@@@@ IMPORTANT!!! date_test anomaly:
when you convert to seconds, using "today" as the date keeps changing,
but using a number, like 11/13 stays the same, and is a smaller number
than "today". Today is now.
d0=$(date --date=today +%s) NOW!
d0=$(date +%s) no, this keeps changing, too.
This didn't work, either:
dom=$(date +%d)
d0=$(date --date=dom +%s)
Solution: Today is yesterday ; d0=$(date --date=yesterday +%s) until further notice

Better Solution:
# Today's date, in seconds, at the beginning of the day.
# Use d0 with d1 (the entered date in seconds) for testing valid dates.
beginday=$(date +%Y-%m-%d) 
d0=$(date --date="$beginday" +%s)

NOTE!  date_test only works with gnu coreutils. Won't work with bsd.

#WISHLIST
# Export sorted lists to file?
# Find a use for date-of-entry field?
# Display entries by date they were entered? Is this on anyone's wishlist?
# Multiple tags per entry??? 


# CHANGES in .04.1
#
# Sort entries by due date in del_line and rdel_line.
# Inform user of invalid entry for del_line and rdel_line,
# and then ask_del, instead of silent exit.
# Put the cat out.
# Added test for old tmplist.
# Added kill_cal if no entries found on recall.
# Moved show_cal out of options and into relevant functions.
# Changed field separator to pipe, so you can use colons in message.
# All long options now require double dashes.
# Reformatted options section for visual clarity.
# Changed the names of functions for console to *_cons and recurrent to
# recurrent_entry. 
# Changed names of variables: ln to line_num, d0 to day0, d1 to day1.
# Recurrent events get echoed to screen when you enter them.
# 

#
# CHANGES in .04
#
# Added recurrent entry, -r or -recur (use words like
# day, week, month for daily, weekly, monthly.
# NOTE: This entry method bypasses the date test.
# Moved test for argument out of -k and -tc function. 
#

# CHANGES in .03d.9
#
# Fixed problem with today's date for date_test.
# Moved ddt, d1, d0 out of options loop, into test_date, recall_due,
# and recall_due_c. 
# Added tab to the rest of the awk commands where it was missing. 
# Now recall_tag displays the tag, in case you want to search for
# a pattern that's common to two tags.
# Added test for argument to options -tc and -k, in the functions.
# Added more word options to some of the existing options:
# -add, -due, -key, -list, -tag, -week

# CHANGES in .03d.8
#
# Cloned some functions and edited them to display cal in console.
# Changed font in xterm display of cal. 
#
# Tags can be up to six characters without screwing with the alignment.
# This is accomplished by adding a tab in the awk output. No need for
# printf. Done in all output. Looks like it's ok for tags to contain
# a space.
#
# Alternate Fonts in xterm:
### This one is good!
#  xterm -font -*-fixed-medium-r-*-*-20-*-*-*-*-*-iso8859-* -geometry 67x12+0+0 -hold -e 'cal -3' &  
### This one is better!
#    xterm -fa monaco -fs 11 -geometry 67x12+0+0 -hold -e 'cal -3' &
# xterm -font -adobe-helvetica-bold-r-normal-*-14-*-*-*-*-*-iso8859-* 
#
# Tried other terminals for calendar display:
# this one looks good, but doesn't go away when you quit the pager
# geometry is set for upper left of second monitor
#    xfce4-terminal --geometry 67x10+1280+0 --hold -e 'cal -3'
# Failed to display cal in lxterminal, roxterminal, eterm


# CHANGES in .03d.7
#
# added another test in kill_call, to avoid seeing ps --help
# when using the -a option. The cal now shows on all entry methods.
# kill_call is in append_entry
# test_date works with all entry methods


# CHANGES in .03d.6
#
# added cal -3 display in xterm for some options
#
# added -xr to reverse the sort on del_line (added function rdel_line)
# 
# Clean old entries at once (-clean): the expert I
# consulted says that this way is fine. Therefore, it's done.
#
# added test_date to the no-option entry. Still haven't added it
# to interactive entry. If so, kill_cal won't run. Would need to add
# kill_cal to test_date function. Maybe not such a bad idea. Later. 



# CHANGES in .03d.5
#
# Added test to recall functions to get rid of error message if
# no tmpfile gets created (if no entries match the recall).
#
# New variable, $taskfer_dir = $HOME/.taskfer - makes it easier
# to use a different directory for taskferrc, tmpfile and tasklist.
#
# Recalls (-d, -l, -t, -w)  no longer show "Entered on..." 
# or the colons between fields.
#
# Recall tags (-t) no longer shows the tag. If your memory is that short,
# a task manager won't help.
#
# Clean old entries at once (-clean) works, but it's not the solution
# I wanted. It selects newer entries and replaces the task list file,
# while making a dated backup copy of the old task list. 


#CHANGES in .03d4
# Use no argument to make an entry. You'll be promted to enter all 
# fields, separated by semi-colons. No quotes are needed for free-form
# dates or for text, even with parentheses. Don't use semi-colons in 
# your text, or the text field will be cut short. If you don't like 
# that, change the field separator on line 330 and in awk around 
#lines 332, 333, and 335, or convince me to do it. I'm undecided.


# CHANGES in .03d3
# Fixed bug in todo -x (to delete a line)
# If you entered nothing, it deleted all lines
# in the tasklist. Better now.


# CHANGES in .03d
# Interactive entry (-i) asks question for each field.
# Recall range of dates. (-w)
# Delete lines without having to answer yes after each one. (-y)
# Almost: delete all entries with old due dates.



Notes about v.03b
Sanity check for dates works. If you enter a date in the past, it warns you and asks if you want to proceed.
Nadir figured out how to specific fields, and that code allows more than one character in the tag field.
Sorting is still a problem. Even with 'sort -n' or 'sort -h' it still sorts the tag field first. 
Some punctuation in the text field causes pukage. If that happens, put quotes around the text entry.
Semi-colons and parentheses do it. I don't know what else.



Note about the name.
I've been calling it todo.  Telemachus started using tasker. There's alreay an android app called tasker. There's also one called task that's in the debian repos. There's also a tasky and a tasque. I came up with taskfer. Nadir likes it. So I started using it inside the script.
Taskfer carries your tasks. I wish it would do mine for me.



These are done except for the colors. That seems to be inconsistent.

- Done - Figure out how to do somthing like:
    if x is in field y, do something
- Right now, the script exits after it does almost any task. Should it keep running?
 e.g. Done - Maybe for deleting a line, it should loop and ask if you want to delete another.
      (Put a while loop in the function)
- Disable colors in my nano. Holy shit.


