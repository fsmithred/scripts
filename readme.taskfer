readme.taskfer

Taskfer (a.k.a. todo) is a simple command-line task manager that
runs in bash.

Copyright 2010 fsmithred at gmail dot com
License: Artistic License 2.0
(http://www.perlfoundation.org/artistic_license_2_0)


_INSTALLATION_

The executable script is named todo for easy typing. Put it in your 
path ($HOME/bin is a good choice), or run from the current directory as
  ./todo [option]

Put taskferrc in $HOME/.taskfer (or don't. this is optional.)
Edit taskferrc to customize the paths.

Edit the taskfer_dir variable in the main script if you want 
the config and working files in some other directory.
It's near the beginning, and it looks like this:
taskfer_dir=$HOME/.taskfer


_USING TASKFER_

ADD TASKS TO THE LIST

There are three ways to make an entry:

1. Use the -i option (interactive)
Script asks you to enter tag, date and message, one
item at a time. (See below for more information about entries.) 

2. Use the -a option (add/append)
    todo -a  <tag>  <date>  <message text>

All information you want to enter goes on the command line. Leave
a space between each field. Free-form dates with spaces, like 
"next week" or "Nov 15" need to be quoted. The message text may or 
may not need quotes, depending on what symbols it contains. 
Parentheses and semi-colons are known to be a problem.

If the date is in the past, you will be asked if you want to continue.
All fields must be entered. If you forget a tag or a date, you'll get
the wrong information in that field in the task list.

3. Use no option
Run the script with no options, and you will be prompted to enter
a tag, a date, and a message, all on one line, separated by semi-colons. 
Spaces don't matter, but be consistent about whether you use a space
before and after the semi-colon, so your fields line up when you recall
them. Nothing needs to be quoted. It is now safe to use colons and 
semi-colons in any field. (starting with version .04.1)

A note about tags:
Tags can be up to six characters long without messing up the alignment
of the fields on recall. Longer tags will work, but the result won't
look as nice.



RECALL/DISPLAY TASKS

todo <option>


-l
Displays all entries using the pager (default pager is less.) Entries
are sorted by date, with the oldest dates at the top.

-d <due date>
Diplays all entries due on the specified date. Entries are sorted by
tag, in alphanumeric order. (numbers first) Dates with spaces don't
need to be quoted here. For example, 

  todo -d next week 

will show entries with due date one week from today.


-w [n]
Shows all tasks due for the next n days. If n is ommitted, the next
week (today plus 7 days) will be displayed.

-t  <tag>  
Displays all entries that have the specified tag. Entries are sorted
by date, with the oldest dates at the top.

-k <keyword>
Displays all entries that contain the specified key word or phrase
anywhere in the entry, including tags and dates.



REMOVE TASKS FROM THE LIST

-x
Displays the entire tasklist with numbered lines and asks which line
to delete, then asks if you want to delete another line. A yes answer
displays the edited list and asks which line to delete. Quits when you 
answer with other than y or Y.

-clean
Removes all entries with due date older than today.

-e
Opens the tasklist in a text editor. The default is ***vim/nano*** (DECIDE!)
and can be changed by editing taskferrc.

-h
Shows a brief help message.



AUTOMATIC NOTIFICATION

There are a few ways to get taskfer to remind you automatically that you
have tasks listed for the day (or the week.)

If you log in to a command line environment:
Put a line like this in your .profile, and you'll get to see your tasks
for the week when you log in. Change "todo -wc" to "todo -dc" to get
the task list for today only. 

echo -e "\n\n" && todo -wc  && echo -e "\n today is: \n $(date +%F) \n"


If you're in a graphical environment, you can use taskfer-notify. You
must have libnotify-bin installed (in Debian), and you must put the
taskfer-notify script in your path. This will give you a popup window to
alert you that there are tasks due today. 

You could add taskfer-notify to your startup applications in whatever 
desktop you're using, and you'll get the popup when you log in to your 
desktop. Another way would be to make a wrapper script for some 
application that you normall run by clicking on a panel button. 
I've got mine set to run when I start my browser. Edit the button
properties to run a script like the following, make the script
executable, and put it in your path.

#!/usr/bin/env bash
# start-iceweasel

$HOME/bin/taskfer-notify
iceweasel

exit 0

